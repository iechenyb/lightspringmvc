<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.1.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<context:property-placeholder location="classpath:App.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	      <property name="driverClassName" value="${connection.database.driverclassname}" />      
	      <property name="url" value="${connection.database.url}" />
	      <property name="username" value="${connection.database.username}" />
	      <property name="password" value="${connection.database.password}" />
	      <property name="initialSize" value="1" />
	      <property name="minIdle" value="1" /> 
	      <property name="maxActive" value="20" />
	      <property name="maxWait" value="60000" />
	      <property name="timeBetweenEvictionRunsMillis" value="60000" />
	      <property name="minEvictableIdleTimeMillis" value="300000" />
	      <property name="validationQuery" value="SELECT 1+1 from dual" />
	      <property name="testWhileIdle" value="true" />
	      <property name="testOnBorrow" value="false" />
	      <property name="testOnReturn" value="false" />
	      <property name="poolPreparedStatements" value="true" />
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	      <property name="filters" value="stat" />
	</bean>  
	<!-- 配置Session Factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">     
	      <props>
	      	<prop key="hibernate.dialect">${hibernate.mysql.dialect}</prop>
	      	<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
	      	<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>                    
	        <prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
	        <prop key="hibernate.hbm2ddl.auto">${hibernate.hbmddl}</prop> 
	        <!--  <prop key="hibernate.connection.autocommit">true</prop> -->
	        <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
	        <prop key="generate_statistics">true</prop>
	        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
	        <prop key="hibernate.cache.use_second_level_cache">true</prop>
	        <prop key="hibernate.cache.use_structured_entries">true</prop>
	        <prop key="hibernate.cache.use_query_cache">true</prop>
	        <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache_hibernate.xml</prop>	       
	      </props>
      </property>
		<property name="packagesToScan" >
		  <list> 
                <value>com.cyb.po</value> 
          </list> 
        </property> 
       <!--  <property name="mappingDirectoryLocations">
            <list>
                <value>
                  
                </value>
            </list>
        </property> -->
     <!-- <property name="mappingResources">
         <list>
            <value></value> 
        </list>
    </property> -->
	</bean>		
	    <!-- 开启AOP监听 只对当前配置文件有效 -->
        <aop:aspectj-autoproxy expose-proxy="true" />

        <!-- 开启注解事务 只对当前配置文件有效 
        <tx:annotation-driven transaction-manager="txManager" />
        -->
        <bean id="txManager"
                class="org.springframework.orm.hibernate4.HibernateTransactionManager">
                <property name="sessionFactory" ref="sessionFactory" />
        </bean>

        <tx:advice id="txAdvice" transaction-manager="txManager">
                <tx:attributes>
                        <tx:method name="save*" propagation="REQUIRED" />
                        <tx:method name="add*" propagation="REQUIRED" />
                        <tx:method name="create*" propagation="REQUIRED" />
                        <tx:method name="insert*" propagation="REQUIRED" />
                        <tx:method name="update*" propagation="REQUIRED" />
                        <tx:method name="merge*" propagation="REQUIRED" />
                        <tx:method name="del*" propagation="REQUIRED" />
                        <tx:method name="remove*" propagation="REQUIRED" />
                        <tx:method name="put*" propagation="REQUIRED" />
                        <tx:method name="use*" propagation="REQUIRED" />
                        <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
                        <tx:method name="get*" propagation="REQUIRED" read-only="true" />
                        <tx:method name="count*" propagation="REQUIRED" read-only="true" />
                        <tx:method name="find*" propagation="REQUIRED" read-only="true" />
                        <tx:method name="list*" propagation="REQUIRED" read-only="true" />
                        <tx:method name="*" read-only="true" />
                </tx:attributes>
        </tx:advice>
        <aop:config expose-proxy="true">
                <!-- 只对业务逻辑层实施事务 -->
                <aop:pointcut id="txPointcut"
                        expression="execution(* com.cyb.service..*(..))" />
                <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
        </aop:config>
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		     <property name="dataSource">
		         <ref bean="dataSource" />
		     </property>
     	</bean>
	 
</beans>
